security:
    encoders:
        App\Entity\User: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        our_db_provider:
            entity:
                class: App\Entity\User
                property: mail
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: our_db_provider
            form_login:
                login_path: login
                check_path: login
                username_parameter: "login_user[mail]"
                password_parameter: "login_user[password]"
            logout:
                path: /logout
                target: /

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetPassword, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/updateMail, roles: ROLE_USER }
        - { path: ^/updatePassword, roles: ROLE_USER }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
